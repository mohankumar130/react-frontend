pipeline {
    agent any

    environment {
        AWS_REGION = 'ap-south-1'
        ECR_REPO = '167872550339.dkr.ecr.ap-south-1.amazonaws.com/myapp'
        CLUSTER_NAME = 'frontend-ecs-cluster'
        TASK_DEF_ARN = 'arn:aws:ecs:ap-south-1:167872550339:task-definition/lightstorm-liquibase-dev-td:6'
        SUBNETS = 'subnet-048880d64d8a7c70b,subnet-0e9dc03b00b8fd490','subnet-0ff31ede4fe6a3ead'
        SECURITY_GROUP = 'sg-0a560fc080c082678'
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    sh 'aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO'
                    sh 'docker build -t myapp:latest .'
                    sh 'docker tag myapp:latest $ECR_REPO:latest'
                }
            }
        }

        stage('Push to ECR') {
            steps {
                sh 'docker push $ECR_REPO:latest'
            }
        }

        stage('Run ECS Task') {
            steps {
                script {
                    sh '''
                    aws ecs run-task \
                        --cluster $CLUSTER_NAME \
                        --task-definition $TASK_DEF_ARN \
                        --launch-type FARGATE \
                        --network-configuration "awsvpcConfiguration={subnets=[$SUBNETS],securityGroups=[$SECURITY_GROUP],assignPublicIp=ENABLED}" \
                        --started-by Jenkins-Pipeline \
                        --query "tasks[0].taskArn" \
                        --output text > ecs-task-arn.txt
                    '''
                    sh 'cat ecs-task-arn.txt'
                }
            }
        }
    }
}
